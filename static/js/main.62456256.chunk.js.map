{"version":3,"sources":["components/Form.js","components/Result.js","img/winter.jpg","img/spring.jpg","img/summer.jpg","img/autumn.jpg","components/Header.js","components/Footer.js","components/App.js","index.js"],"names":["Form","props","onSubmit","submit","className","type","value","onChange","change","placeholder","onClick","slideDown","Result","weather","date","err","city","sunrise","sunset","temp","pressure","humidity","timezone","wind","content","sunriseTime","Date","toLocaleTimeString","sunsetTime","Header","src","summer","alt","autumn","winter","spring","Footer","href","title","APIkey","App","state","slideRef","React","createRef","handleInputChange","e","setState","target","handleCitySubmit","preventDefault","API","fetch","then","response","ok","Error","json","data","toLocaleString","prevState","sys","main","speed","catch","console","log","current","scrollIntoView","behavior","this","ref","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62456256.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = (props) => {\r\n    return ( \r\n        <form onSubmit={props.submit} className=\"Form\">\r\n            <input type=\"text\" value={props.value} onChange={props.change} placeholder=\"Wpisz nazwę miasta\"/>\r\n            <button onClick ={props.slideDown}>Wyszukaj</button>\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default Form;","import React from 'react';\r\nimport '../styles/Result.css'\r\n\r\nconst Result = (props) => {\r\n    const {date, err, city,sunrise,sunset,temp,pressure,humidity,timezone,wind} =props.weather;\r\nlet content = null;\r\nif(!err && city)\r\n{\r\n    const sunriseTime= new Date((sunrise+ timezone -7200) *1000).toLocaleTimeString()\r\n    const sunsetTime= new Date((sunset+ timezone -7200) *1000).toLocaleTimeString()\r\n    content = (\r\n        <>\r\n            <h4>Aktualne dane pogodowe dla miasta <p className=\"data\">{city}</p></h4>\r\n            <h4>Dane dla dnia i godziny <p className=\"data\">{date}</p></h4>\r\n            <h4>Temparatura: <p className=\"data\">{temp} &#176;C</p></h4>\r\n            <h4>Ciśnienie: <p className=\"data\">{pressure} hPa</p></h4>\r\n            <h4>Wilgotność: <p className=\"data\">{humidity} %</p></h4>\r\n            <h4>Siła wiatru: <p className=\"data\">{wind} m/s</p></h4>\r\n            <h4>Wschód słońca: <p className=\"data\">{sunriseTime}</p></h4>\r\n            <h4>Zachód słońca: <p className=\"data\">{sunsetTime}</p></h4>\r\n            \r\n        </>\r\n    )\r\n}\r\n    return ( \r\n<div className=\"result\">\r\n    {err ? <p className=\"data noCity\">Brak danych w bazie o podanym mieście: {city}</p> : content}\r\n</div>\r\n     );\r\n}\r\n \r\nexport default Result;","export default __webpack_public_path__ + \"static/media/winter.e473f8dc.jpg\";","export default __webpack_public_path__ + \"static/media/spring.a6901bc1.jpg\";","export default __webpack_public_path__ + \"static/media/summer.cc190b1e.jpg\";","export default __webpack_public_path__ + \"static/media/autumn.1537c765.jpg\";","import React from 'react';\r\nimport '../styles/Header.css';\r\nimport winter from \"../img/winter.jpg\";\r\nimport spring from \"../img/spring.jpg\";\r\nimport summer from \"../img/summer.jpg\";\r\nimport autumn from \"../img/autumn.jpg\";\r\n\r\nconst Header = () => {\r\n    return ( \r\n  <header className=\"Header\">\r\n     <img src={summer} alt=\"summer\"/>\r\n     <img src={autumn} alt=\"autumn\"/>\r\n    <img src={winter} alt=\"winter\"/>\r\n    <img src={spring} alt=\"spring\"/>\r\n    \r\n\r\n      \r\n  </header> \r\n    );\r\n}\r\n \r\nexport default Header;\r\n","import React from 'react';\r\nimport '../styles/Footer.css'\r\nconst Footer = () => {\r\n    return ( \r\n    <footer className=\"Footer\">\r\n        <div className=\"MadeBy\"> \r\n        <p> Strom of Sun @2021</p>\r\n        <p>Website made by Jędrek Dąbrowski </p>\r\n        </div>\r\n        <div className=\"Icons\">\r\n            Icons made by <a href=\"https://www.flaticon.com/authors/good-ware\" title=\"Good Ware\">Good Ware</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a>\r\n        </div>\r\n    </footer>\r\n    );\r\n}\r\n \r\nexport default Footer;","import React, { Component } from 'react';\nimport '../styles/App.css';\nimport Form from './Form.js'\nimport Result from './Result.js'\nimport Header from './Header.js'\nimport Footer from './Footer.js'\n\nconst APIkey ='c06272c73de545a7f672d9cd0437f163'\nclass App extends Component {\n\n  state={\n    value: \"\",\n    date: '',\n    city: '',\n    sunrise: '',\n    sunset: '',\n    temp: '',\n    pressure: '',\n    wind: '',\n    humidity: '',\n    timezone: '',\n    err: false,\n  }\n  slideRef = React.createRef();\n\n  handleInputChange = (e)=>{\n    this.setState({\n      value: e.target.value\n    })\n    e.target.value=\"\"\n  }\n\nhandleCitySubmit = (e) =>{\n  e.preventDefault();\n  const API =`http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&APPID=${APIkey}&units=metric`;\n\n  fetch(API)\n  .then(response => {\n    if(response.ok){\n      return response;\n    }\n    throw Error(\"Nie udało się pobrać danych\")\n  })\n  .then(response =>  response.json())\n  .then(data => {\n    const date = new Date().toLocaleString();\n    this.setState(prevState =>({\n      err: false,\n      date: date,\n      sunrise: data.sys.sunrise,\n      sunset: data.sys.sunset,\n      temp: data.main.temp,\n      pressure: data.main.pressure,\n      humidity: data.main.humidity,\n      wind: data.wind.speed,\n      timezone: data.timezone,\n      city: prevState.value,\n    }))\n  })\n  .catch(err => {\n    console.log(err);\n    this.setState( prevState => ({\n      err: true,\n      city: prevState.value,\n    }))\n  }) \n}\nslideDown = () =>   {\n  this.slideRef.current.scrollIntoView({ behavior: 'smooth' })\n}\n\n\n  render(){\n  return (\n    <div className=\"App\" >\n      <Header/>\n      <Form \n      value={this.state.value} \n      change={this.handleInputChange} \n      submit={this.handleCitySubmit}\n      slideDown={this.slideDown}\n      />\n      <Result  weather={this.state}/>\n      <Footer/>\n      <div ref={this.slideRef}></div>\n      \n    </div>\n  );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}